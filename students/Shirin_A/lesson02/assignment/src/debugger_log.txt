                        ///////////////////////////////////
                                 Debugging log 
                        ////////////////////////////////             
 c:\users\public\py220-online-201904-v2\students\shirin_a\lesson02\assignment\src\charges_calc.py(1)<module>()
-> """ Returns total price paid for individual rentals""
(Pdb) n
> c:\users\public\py220-online-201904-v2\students\shirin_a\lesson02\assignment\src\charges_calc.py(17)<module>()
-> def load_rentals_file(filename):
(Pdb) n
> c:\users\public\py220-online-201904-v2\students\shirin_a\lesson02\assignment\src\charges_calc.py(39)<module>()
-> def save_to_json(filename, data):
(Pdb)
> c:\users\public\py220-online-201904-v2\students\shirin_a\lesson02\assignment\src\charges_calc.py(43)<module>()
-> if __name__ == "__main__":
(Pdb)
> c:\users\public\py220-online-201904-v2\students\shirin_a\lesson02\assignment\src\charges_calc.py(44)<module>()
-> args = parse_cmd_arguments()
(Pdb) n
///////////////////////////////////////////////////
usage: charges_calc.py [-h] -i INPUT -o OUTPUT
charges_calc.py: error: unrecognized arguments: -d 1
SystemExit: 2
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\


After adding debug argument in the parse_cmd_arguments


> c:\users\public\py220-online-201904-v2\students\shirin_a\lesson02\assignment\src\charges_calc.py(46)<module>()
-> data = load_rentals_file(args.input)
(Pdb) s
--Call--
> c:\users\public\py220-online-201904-v2\students\shirin_a\lesson02\assignment\src\charges_calc.py(18)load_rentals_file()
-> def load_rentals_file(filename):
(Pdb) s
> c:\users\public\py220-online-201904-v2\students\shirin_a\lesson02\assignment\src\charges_calc.py(19)load_rentals_file()
-> with open(filename) as file:
(Pdb) n
> c:\users\public\py220-online-201904-v2\students\shirin_a\lesson02\assignment\src\charges_calc.py(20)load_rentals_file()
-> try:
(Pdb) ll
 18     def load_rentals_file(filename):
 19         with open(filename) as file:
 20  ->         try:
 21                 data = json.load(file)
 22             except:
 23                 exit(0)
 24         return data
(Pdb) s
> c:\users\public\py220-online-201904-v2\students\shirin_a\lesson02\assignment\src\charges_calc.py(21)load_rentals_file()
-> data = json.load(file)
(Pdb) n
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
json.decoder.JSONDecodeError: Expecting property name enclosed in double quotes: line 5884 column 23 (char 130093)
> c:\users\public\py220-online-201904-v2\students\shirin_a\lesson02\assignment\src\charges_calc.py(44)<module>()
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\


This is the error that comming from source json file.There was double comma in line 5884 column 23. After fixing this
data has loaded successfully.


> c:\users\public\py220-online-201904-v2\students\shirin_a\lesson02\assignment\src\charges_calc.py(21)load_rentals_file()
-> data = json.load(file)
 c:\users\public\py220-online-201904-v2\students\shirin_a\lesson02\assignment\src\charges_calc.py(24)load_rentals_file()
-> return data
(Pdb) n
--Return--
> c:\users\public\py220-online-201904-v2\students\shirin_a\lesson02\assignment\src\charges_calc.py(24)load_rentals_file()->{'RNT001': {'price_per_day': 31, 'product_code': 'PRD80', 'rental_end': '3/22/17', 'rental_start': '6/12/17', ...}, 'RNT002': {'price_per_day': 16, 'product_code': 'PRD11', 'rental_end': '9/30/18', 'rental_start': '7/20/16', ...}, 'RNT003': {'price_per_day': 40, 'product_code': 'PRD22', 'rental_end': '6/4/17', 'rental_start': '2/1/16', ...}, 'RNT004': {'price_per_day': 40, 'product_code': 'PRD86', 'rental_end': '12/7/17', 'rental_start': '8/14/16', ...}, ...}
-> return data
(Pdb) s
--Call--
> c:\users\public\py220-online-201904-v2\students\shirin_a\lesson02\assignment\src\charges_calc.py(26)calculate_additional_fields()
-> def calculate_additional_fields(data):
(Pdb) s
> c:\users\public\py220-online-201904-v2\students\shirin_a\lesson02\assignment\src\charges_calc.py(27)calculate_additional_fields()
-> for value in data.values():
(Pdb) n
> c:\users\public\py220-online-201904-v2\students\shirin_a\lesson02\assignment\src\charges_calc.py(28)calculate_additional_fields()
-> try:
(Pdb) ll
 26     def calculate_additional_fields(data):
 27         for value in data.values():
 28  ->         try:
 29                 rental_start = datetime.datetime.strptime(value['rental_start'], '%m/%d/%y')
 30                 rental_end = datetime.datetime.strptime(value['rental_end'], '%m/%d/%y')
 31                 value['total_days'] = (rental_end - rental_start).days
 32                 value['total_price'] = value['total_days'] * value['price_per_day']
 33                 value['sqrt_total_price'] = math.sqrt(value['total_price'])
 34                 value['unit_cost'] = value['total_price'] / value['units_rented']
 35             except:
 36                 exit(0)
 37
 38         return data

(Pdb) n
> c:\users\public\py220-online-201904-v2\students\shirin_a\lesson02\assignment\src\charges_calc.py(30)calculate_additional_fields()
-> rental_end = datetime.datetime.strptime(value['rental_end'], '%m/%d/%y')
(Pdb) n
> c:\users\public\py220-online-201904-v2\students\shirin_a\lesson02\assignment\src\charges_calc.py(31)calculate_additional_fields()
-> value['total_days'] = (rental_end - rental_start).days
(Pdb) s
> c:\users\public\py220-online-201904-v2\students\shirin_a\lesson02\assignment\src\charges_calc.py(32)calculate_additional_fields()
-> value['total_price'] = value['total_days'] * value['price_per_day']
(Pdb) s
> c:\users\public\py220-online-201904-v2\students\shirin_a\lesson02\assignment\src\charges_calc.py(33)calculate_additional_fields()
-> value['sqrt_total_price'] = math.sqrt(value['total_price'])
(Pdb) n
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
ValueError: math domain error
> c:\users\public\py220-online-201904-v2\students\shirin_a\lesson02\assignment\src\charges_calc.py(33)calculate_additional_fields()
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
-> value['sqrt_total_price'] = math.sqrt(value['total_price'])
(Pdb) n
(Pdb) pp rental_start
datetime.datetime(2017, 6, 12, 0, 0)
(Pdb) pp rental_end
datetime.datetime(2017, 3, 22, 0, 0)
(Pdb) n
(Pdb) pp value['total_price']
-2542
(Pdb) pp value['total_days']
-82


Here we see rental start comes after the rental end. That's why we are getting negative total days and negative total price.
we are trying to sqrt of negative value that gives us 'math domain error' .
changed the for loop at the start of "calculate_additional_fields()" to 'for key, value in data.items()'
so that we can use the `key` in the logging message to find and correct errors in the json file.


> c:\users\public\py220-online-201904-v2\students\shirin_a\lesson02\assignment\src\charges_calc.py(37)calculate_additional_fields()
-> rental_start = datetime.datetime.strptime(value['rental_start'], '%m/%d/%y')
(Pdb) n
> c:\users\public\py220-online-201904-v2\students\shirin_a\lesson02\assignment\src\charges_calc.py(41)calculate_additional_fields()
-> try:
(Pdb) n
> c:\users\public\py220-online-201904-v2\students\shirin_a\lesson02\assignment\src\charges_calc.py(42)calculate_additional_fields()
-> rental_end = datetime.datetime.strptime(value['rental_end'], '%m/%d/%y')
(Pdb) n
> c:\users\public\py220-online-201904-v2\students\shirin_a\lesson02\assignment\src\charges_calc.py(46)calculate_additional_fields()
-> value['total_days'] = (rental_end - rental_start).days
(Pdb) n
> c:\users\public\py220-online-201904-v2\students\shirin_a\lesson02\assignment\src\charges_calc.py(47)calculate_additional_fields()
-> if value['total_days'] < 0:
(Pdb) n
> c:\users\public\py220-online-201904-v2\students\shirin_a\lesson02\assignment\src\charges_calc.py(48)calculate_additional_fields()
-> print("rental start is before the rental end in %s", key)
(Pdb) n
rental start is before the rental end in %s RNT001
> c:\users\public\py220-online-201904-v2\students\shirin_a\lesson02\assignment\src\charges_calc.py(50)calculate_additional_fields()
-> try:
(Pdb) n
> c:\users\public\py220-online-201904-v2\students\shirin_a\lesson02\assignment\src\charges_calc.py(51)calculate_additional_fields()
-> value['total_price'] = value['total_days'] * value['price_per_day']
(Pdb) n
> c:\users\public\py220-online-201904-v2\students\shirin_a\lesson02\assignment\src\charges_calc.py(52)calculate_additional_fields()
-> value['sqrt_total_price'] = math.sqrt(value['total_price'])
(Pdb) n
ValueError: math domain error
> c:\users\public\py220-online-201904-v2\students\shirin_a\lesson02\assignment\src\charges_calc.py(52)calculate_additional_fields()
-> value['sqrt_total_price'] = math.sqrt(value['total_price'])
(Pdb) n
> c:\users\public\py220-online-201904-v2\students\shirin_a\lesson02\assignment\src\charges_calc.py(54)calculate_additional_fields()
-> except ValueError as ex:
(Pdb) n
> c:\users\public\py220-online-201904-v2\students\shirin_a\lesson02\assignment\src\charges_calc.py(55)calculate_additional_fields()
-> if "math domain error" in str(ex):
(Pdb) n
> c:\users\public\py220-online-201904-v2\students\shirin_a\lesson02\assignment\src\charges_calc.py(56)calculate_additional_fields()
-> print('''total_price is negative: %s , key)
(Pdb) n
total_price is negative: %s -2542 RNT001
> c:\users\public\py220-online-201904-v2\students\shirin_a\lesson02\assignment\src\charges_calc.py(35)calculate_additional_fields()
-> for key, value in data.items():
(Pdb) pp value
{'price_per_day': 31,
 'product_code': 'PRD80',
 'rental_end': '3/22/17',
 'rental_start': '6/12/17',
 'total_days': -82,
 'total_price': -2542,
 'units_rented': 8}
(Pdb)





